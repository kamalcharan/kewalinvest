/**
 * Move file from pending to processed folder
 */
private async moveFileToProcessed(
  fileId: number,
  importType: string
): Promise<void> {
  const fs = require('fs').promises;
  const path = require('path');
  
  try {
    // Get file details from database
    const fileQuery = `
      SELECT original_filename, stored_filename, file_path 
      FROM t_file_uploads 
      WHERE id = $1
    `;
    const fileResult = await this.db.query(fileQuery, [fileId]);
    
    if (fileResult.rows.length === 0) {
      console.warn(`File ${fileId} not found for moving`);
      return;
    }
    
    const file = fileResult.rows[0];
    const currentPath = file.file_path;
    
    // Determine the folder based on import type
    const folderMap: Record<string, string> = {
      'CustomerData': 'customers',
      'TransactionData': 'transactions',
      'SchemeData': 'schemes'
    };
    
    const folder = folderMap[importType] || 'customers';
    
    // Build new path
    const newPath = currentPath.replace('/pending/', '/processed/');
    
    // Move the file
    await fs.rename(currentPath, newPath);
    
    // Update database with new path
    await this.db.query(
      'UPDATE t_file_uploads SET file_path = $1 WHERE id = $2',
      [newPath, fileId]
    );
    
    console.log(`âœ… File moved from pending to processed: ${file.original_filename}`);
  } catch (error) {
    console.error('Error moving file to processed folder:', error);
    // Don't throw - this is not critical for the import process
  }
}

// Call this method in your processImport method after successful completion:
if (processingResult.success) {
  await this.moveFileToProcessed(session.file_upload_id, importType);
}