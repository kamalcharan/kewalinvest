version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: kewalinvest_db
    environment:
      POSTGRES_DB: kewalinvest
      POSTGRES_USER: kewal_admin
      POSTGRES_PASSWORD: ${DB_PASSWORD:-kewal_secure_pass_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - kewalinvest_network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: kewalinvest_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kewalinvest_network
    restart: unless-stopped

  # Backend API with hot reloading
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kewalinvest_backend
    environment:
      NODE_ENV: development
      PORT: 8080
      DATABASE_URL: postgresql://kewal_admin:${DB_PASSWORD:-kewal_secure_pass_2024}@postgres:5432/kewalinvest
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key_change_in_production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your_refresh_secret_key_change_in_production}
    volumes:
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - ./backend/tsconfig.json:/app/tsconfig.json
      - ./backend/nodemon.json:/app/nodemon.json
      - ./UserFiles:/app/UserFiles  # Add UserFiles volume to backend
    ports:
      - "8080:8080"
    networks:
      - kewalinvest_network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    command: npm run dev

  # Frontend with hot reloading
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kewalinvest_frontend
    environment:
      REACT_APP_API_URL: http://localhost:8080
      CHOKIDAR_USEPOLLING: 'true'
      WATCHPACK_POLLING: 'true'
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/.env:/app/.env
    ports:
      - "3000:3000"
    networks:
      - kewalinvest_network
    depends_on:
      - backend
    restart: unless-stopped
    stdin_open: true
    tty: true

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kewalinvest_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@kewalinvest.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - kewalinvest_network
    depends_on:
      - postgres
    restart: unless-stopped

networks:
  kewalinvest_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  pgadmin_data: